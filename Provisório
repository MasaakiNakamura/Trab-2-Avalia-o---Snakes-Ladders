package Main;

import java.util.Random;
import javax.swing.JOptionPane;

public class Jogo {
	public static void main(String[] args){
		Jogador Player1 = new Jogador();
		Jogador Player2 = new Jogador();
		Dado valorDoDado = new Dado();
		Cobras cobra1 = new Cobras(5,3);
		Cobras cobra2 = new Cobras(54, 17);
		Cobras cobra3 = new Cobras(76, 22);
		Cobras cobra4 = new Cobras(84, 45);
		Cobras cobra5 = new Cobras(89, 9);
		Cobras cobra6 = new Cobras(95, 68);
		Cobras cobra7 = new Cobras(98, 80);
		Escadas escada1 = new Escadas(2, 24);
		Escadas escada2 = new Escadas(5, 48);
		Escadas escada3 = new Escadas(8, 28);
		Escadas escada4 = new Escadas(21, 41);
		Escadas escada5 = new Escadas(38, 65);
		Escadas escada6 = new Escadas(50, 71);
		Escadas escada7 = new Escadas(55, 93);
		Escadas escada8 = new Escadas(60, 78);
		
		String tabuleiro[] = 
			{100, 99, 98, 97, 96, 95, 94, 93, 92, 91,
		 	81, 82, 83, 84, 85, 86, 87, 88, 89, 90,
		 	80, 79, 78, 77, 76, 75, 74, 73, 72, 71,
		 	61, 62, 63, 64, 65, 66, 67, 68, 69, 70,
		 	60, 59, 58, 57, 56, 55, 54, 53, 52, 51,
		 	41, 42, 43, 44, 45, 46, 47, 48, 49, 50,
		 	40, 39, 38, 37, 36, 35, 34, 33, 32, 31,
		 	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
		 	20, 19, 18, 17, 16, 15, 14, 13, 12, 11,
		 	1, 2, 3, 4, 5, 6, 7, 8, 9, 10}; //tabuleiro

		int i = 0;
		int j = 0;
		
		for(i = 0; i < 100; i++){ //printa o tabuleiro
			//os número de 1 a 10 são menores em espaço de print.
			//Essa diferenciação serve pra alinhar os númeroo na hora de imprimir no consol
			if(i < 10){ //para os números menores que 10, ele printa com um espaço a mais
				System.out.print(tabuleiro[i] + "  ");	
			} else { //para os números menres que 10, ele printa só com um espaço
				System.out.print(tabuleiro[i] + " ");
			}
			if((i+1)%10 == 0){ // Quando chegar nos múltiplos de 10, pula-se uma linha (para poder alinhar as colunas do tabuleiro
				System.out.println("");
			}
		}
		
		Player1.nome = "☺"; //Nome do Jogador 1: "X"
		Player1.posicaoNovaDoJogador = 0; //Definindo a posição inicial do Jogador1, que é 0
		Player2.nome = "☻";
		Player2.posicaoNovaDoJogador = 0;
		
		JOptionPane.showMessageDialog(null, "Novo Jogo");
		Player1.posicaoNovaDoJogador += valorDoDado.JogarDado(); //Posição Nova = Posição Nova + Valor do Dado
		Player1.posicaoAntigaDoJogador = Player1.posicaoNovaDoJogador;  
		System.out.println("\n" + Player1.posicaoNovaDoJogador); //Para fazer o debug do código
		

		if(Player1.posicaoAntigaDoJogador == cobra1.posicaoInicialDaCobra){ //Verifica se a posição Nova do Jogador for igual a posição inicial da Cobra
			Player1.posicaoNovaDoJogador = cobra1.posicaoFinalDaCobra; //Atribui a cauda da cobra como a posição final do Jogador 
			tabuleiro[Player1.posicaoNovaDoJogador - 1] = Player1.nome;  //Vai preencher a nova posição do Jogador com o nome dele.
			//	O "-1" é porque as posições dos vetores contam a partir de 0, então a posição corespondente no vetor é uma unidade a meos
		} else {
			tabuleiro[Player1.posicaoNovaDoJogador - 1] = Player1.nome; //A posição nova é preenchida com o nome do Jogador
		}
		//O "-1" é porque as posições dos vetores contam a partir de 0, então a posição corespondente no vetor é uma unidade a meos 
	
		System.out.println("\n\n\n\n");
		
		for(i = 0; i < 100; i++){ //printa o tabuleiro 
			if(i < 10){
				System.out.print(tabuleiro[i] + "  ");	
			} else {
				System.out.print(tabuleiro[i] + " ");
			}
			if((i+1)%10 == 0){
			System.out.println("");
			}
		}
		
		System.out.println("\n\n\n\n");
		
		JOptionPane.showMessageDialog(null, "Jogador 2");
		Player2.posicaoNovaDoJogador += valorDoDado.JogarDado(); //Posição Nova = Posição Nova + Valor do Dado
		System.out.println("\n" + Player2.posicaoNovaDoJogador); //Para fazer o debug do código
		Player2.posicaoAntigaDoJogador = Player2.posicaoNovaDoJogador;
		
		if(Player2.posicaoAntigaDoJogador == cobra1.posicaoInicialDaCobra){ //Verifica se a posição Nova do Jogador for igual a posição inicial da Cobra
			Player2.posicaoNovaDoJogador = cobra1.posicaoFinalDaCobra; //Atribui a cauda da cobra como a posição final do Jogador 
			if(Player2.posicaoNovaDoJogador == Player1.posicaoNovaDoJogador){ //Verifica se o Jogador 2 está na mesma posição final do Jogador
				tabuleiro[Player2.posicaoNovaDoJogador - 1] = Player2.nome + Player1.nome;  //Vai preencher a nova posição do Jogador com o nome dele.
			} else {
				tabuleiro[Player2.posicaoNovaDoJogador - 1] = Player2.nome;  //Vai preencher a nova posição do Jogador com o nome dele.
				//	O "-1" é porque as posições dos vetores contam a partir de 0, então a posição corespondente no vetor é uma unidade a meos
			}
		} else if(Player2.posicaoNovaDoJogador == Player1.posicaoNovaDoJogador){
			tabuleiro[Player2.posicaoNovaDoJogador - 1] = Player2.nome + Player1.nome;  //Vai preencher a nova posição do Jogador com o nome dele.
		} else {
			tabuleiro[Player2.posicaoNovaDoJogador - 1] = Player2.nome; //A posição nova é preenchida com o nome do Jogador			
		}
		
		System.out.println("\n\n\n\n");
		
		for(i = 0; i < 100; i++){ //printa o tabuleiro 
			if(i < 10){
				System.out.print(tabuleiro[i] + "  ");	
			} else {
				System.out.print(tabuleiro[i] + " ");
			}
			if((i+1)%10 == 0){
			System.out.println("");
			}
		}
		
		System.out.println("\n\n\n\n");
		
		for(j = 0; j < 5; j++){
			JOptionPane.showMessageDialog(null, "Jogador 1");
			
			Player1.posicaoAntigaDoJogador = Player1.posicaoNovaDoJogador; //A posição antiga vai ser a posição anterior (posicaoNova) que ainda não foi redefinida
			Player1.posicaoAntigaDoJogadorEmString = Integer.toString(Player1.posicaoAntigaDoJogador); //Transformar a posição do jogador (int) em String para poder inserir no vetor tabuleiro[]
			Player1.posicaoNovaDoJogador += valorDoDado.JogarDado(); //Redefinindo a nova posição do Jogador1
			
			System.out.println("Posição Antiga1: " + Player1.posicaoAntigaDoJogador);//serve para saber qual valor está saindo
			System.out.println("Posição Nova1: " + Player1.posicaoNovaDoJogador); //serve para saber qual valor está saindo
			System.out.println("Valor do Dado1: " + (Player1.posicaoNovaDoJogador - Player1.posicaoAntigaDoJogador)); //serve para saber qual valor está saindo
			
			if(Player1.posicaoAntigaDoJogador == Player2.posicaoNovaDoJogador){ //veriica se as peças estavam no mesmo lugar
				if(Player1.posicaoNovaDoJogador == cobra1.posicaoInicialDaCobra){ //Verifica se a posição Nova do Jogador for igual a posição inicial da Cobra
					Player1.posicaoNovaDoJogador = cobra1.posicaoFinalDaCobra; //Atribui a cauda da cobra como a posição final do Jogador 
					if(Player1.posicaoNovaDoJogador == Player2.posicaoNovaDoJogador){ //Verifica se o Jogador 2 está na mesma posição final do Jogador
						tabuleiro[Player1.posicaoAntigaDoJogador -1] = Player1.posicaoAntigaDoJogadorEmString; //Na posição antiga do Jogador, vai ser preenchida pelo número da posição correspondente (que é a própria posição antiga do Jogador)
						tabuleiro[Player1.posicaoNovaDoJogador - 1] = Player2.nome + Player1.nome;  //Vai preencher a nova posição do Jogador com o nome dele.
					} else {
						tabuleiro[Player2.posicaoNovaDoJogador - 1] = Player2.posicaoAntigaDoJogadorEmString;
						tabuleiro[Player1.posicaoAntigaDoJogador -1] = Player1.posicaoAntigaDoJogadorEmString; //Na posição antiga do Jogador, vai ser preenchida pelo número da posição correspondente (que é a própria posição antiga do Jogador)
						tabuleiro[Player1.posicaoNovaDoJogador - 1] = Player1.nome;  //Vai preencher a nova posição do Jogador com o nome dele.
						// O "-1" é porque as posições dos vetores contam a partir de 0, então a posição corespondente no vetor é uma unidade a meos
					}
				} else {
					tabuleiro[Player2.posicaoNovaDoJogador - 1] = Player2.nome;
					tabuleiro[Player1.posicaoNovaDoJogador -1] = Player1.nome; //Na posição antiga do Jogador, vai ser preenchida pelo número da posição correspondente (que é a própria posição antiga do Jogador)
				}
			} else {
				if(Player1.posicaoNovaDoJogador == cobra1.posicaoInicialDaCobra){ //Verifica se a posição Nova do Jogador for igual a posição inicial da Cobra
					Player1.posicaoNovaDoJogador = cobra1.posicaoFinalDaCobra; //Atribui a cauda da cobra como a posição final do Jogador
				}
				
				if(Player1.posicaoNovaDoJogador == Player2.posicaoNovaDoJogador){ //Verifica se o Jogador 2 está na mesma posição final do Jogador
					tabuleiro[Player1.posicaoAntigaDoJogador -1] = Player1.posicaoAntigaDoJogadorEmString; //Na posição antiga do Jogador, vai ser preenchida pelo número da posição correspondente (que é a própria posição antiga do Jogador)
					tabuleiro[Player1.posicaoNovaDoJogador - 1] = Player2.nome + Player1.nome;  //Vai preencher a nova posição do Jogador com o nome dele.
				} else {
					tabuleiro[Player1.posicaoAntigaDoJogador -1] = Player1.posicaoAntigaDoJogadorEmString; //Na posição antiga do Jogador, vai ser preenchida pelo número da posição correspondente (que é a própria posição antiga do Jogador)
					tabuleiro[Player1.posicaoNovaDoJogador - 1] = Player1.nome;  //Vai preencher a nova posição do Jogador com o nome dele.
					// O "-1" é porque as posições dos vetores contam a partir de 0, então a posição corespondente no vetor é uma unidade a meos
				}
			}

			System.out.println("\n\n\n\n");
			
			for(i = 0; i < 100; i++){ //printa o tabuleiro 
				if(i < 10){
					System.out.print(tabuleiro[i] + "  ");	
				} else {
					System.out.print(tabuleiro[i] + " ");
				}
				if((i+1)%10 == 0){
				System.out.println("");
				}
			}
			
			System.out.println("\n\n\n\n");
			
			JOptionPane.showMessageDialog(null, "Jogador 2");

			Player2.posicaoAntigaDoJogador = Player2.posicaoNovaDoJogador; //A posição antiga vai ser a posição anterior (posicaoNova) que ainda não foi redefinida
			Player2.posicaoAntigaDoJogadorEmString = Integer.toString(Player2.posicaoAntigaDoJogador); //Transformar a posição do jogador (int) em String para poder inserir no vetor tabuleiro[]
			Player2.posicaoNovaDoJogador += valorDoDado.JogarDado(); //Redefinindo a nova posição do Jogador1
			System.out.println("Posição Antiga2: " + Player2.posicaoAntigaDoJogador); //serve para saber qual valor está saindo
			System.out.println("Posição Nova2: " + Player2.posicaoNovaDoJogador); //serve para saber qual valor está saindo
			System.out.println("Valor do Dado2: " + (Player2.posicaoNovaDoJogador - Player2.posicaoAntigaDoJogador)); //serve para saber qual valor está saindo
				
			if(Player2.posicaoAntigaDoJogador == Player1.posicaoNovaDoJogador){ //veriica se as peças estavam no mesmo lugar
				if(Player2.posicaoNovaDoJogador == cobra1.posicaoInicialDaCobra){ //Verifica se a posição Nova do Jogador for igual a posição inicial da Cobra
					Player2.posicaoNovaDoJogador = cobra1.posicaoFinalDaCobra; //Atribui a cauda da cobra como a posição final do Jogador 
					if(Player2.posicaoNovaDoJogador == Player1.posicaoNovaDoJogador){ //Verifica se o Jogador 2 está na mesma posição final do Jogador
						tabuleiro[Player2.posicaoAntigaDoJogador -1] = Player2.posicaoAntigaDoJogadorEmString; //Na posição antiga do Jogador, vai ser preenchida pelo número da posição correspondente (que é a própria posição antiga do Jogador)
						tabuleiro[Player2.posicaoNovaDoJogador - 1] = Player2.nome + Player1.nome;  //Vai preencher a nova posição do Jogador com o nome dele.
					} else {
						tabuleiro[Player1.posicaoNovaDoJogador - 1] = Player1.posicaoAntigaDoJogadorEmString;
						tabuleiro[Player2.posicaoAntigaDoJogador -1] = Player2.posicaoAntigaDoJogadorEmString; //Na posição antiga do Jogador, vai ser preenchida pelo número da posição correspondente (que é a própria posição antiga do Jogador)
						tabuleiro[Player2.posicaoNovaDoJogador - 1] = Player2.nome;  //Vai preencher a nova posição do Jogador com o nome dele.
						// O "-1" é porque as posições dos vetores contam a partir de 0, então a posição corespondente no vetor é uma unidade a meos
					}
				} else {
					tabuleiro[Player1.posicaoNovaDoJogador - 1] = Player1.nome;
					tabuleiro[Player2.posicaoNovaDoJogador -1] = Player2.nome; //Na posição antiga do Jogador, vai ser preenchida pelo número da posição correspondente (que é a própria posição antiga do Jogador)
				}
			} else {
				if(Player2.posicaoNovaDoJogador == cobra1.posicaoInicialDaCobra){ //Verifica se a posição Nova do Jogador for igual a posição inicial da Cobra
					Player2.posicaoNovaDoJogador = cobra1.posicaoFinalDaCobra; //Atribui a cauda da cobra como a posição final do Jogador
				}
				
				if(Player2.posicaoNovaDoJogador == Player1.posicaoNovaDoJogador){ //Verifica se o Jogador 2 está na mesma posição final do Jogador
					tabuleiro[Player2.posicaoAntigaDoJogador -1] = Player2.posicaoAntigaDoJogadorEmString; //Na posição antiga do Jogador, vai ser preenchida pelo número da posição correspondente (que é a própria posição antiga do Jogador)
					tabuleiro[Player2.posicaoNovaDoJogador - 1] = Player2.nome + Player1.nome;  //Vai preencher a nova posição do Jogador com o nome dele.
				} else {
					tabuleiro[Player2.posicaoAntigaDoJogador -1] = Player2.posicaoAntigaDoJogadorEmString; //Na posição antiga do Jogador, vai ser preenchida pelo número da posição correspondente (que é a própria posição antiga do Jogador)
					tabuleiro[Player2.posicaoNovaDoJogador - 1] = Player2.nome;  //Vai preencher a nova posição do Jogador com o nome dele.
					// O "-1" é porque as posições dos vetores contam a partir de 0, então a posição corespondente no vetor é uma unidade a meos
				}
			}
			
			System.out.println("\n\n\n\n");
			
			for(i = 0; i < 100; i++){ //printa o tabuleiro 
				if(i < 10){
					System.out.print(tabuleiro[i] + "  ");	
				} else {
					System.out.print(tabuleiro[i] + " ");
				}
				if((i+1)%10 == 0){
				System.out.println("");
				}
			}
			
			System.out.println("\n\n\n\n");
		}
	}
}

class Jogador{
	String nome;
	int dadoInicial;
	int posicaoNovaDoJogador;
	int posicaoAntigaDoJogador;
	String posicaoAntigaDoJogadorEmString;

}

class Dado{
	Random random = new Random();
	int valorDoDado;
	int JogarDado(){
		valorDoDado = random.nextInt(10) + 1;
	return valorDoDado;
	}
}

class Cobras{
	int posicaoInicialDaCobra;
	int posicaoFinalDaCobra;
	public Cobras(int posicaoInicialDaCobra,int posicaoFinalDaCobra){
		setPosicaoFinalDaCobra(posicaoFinalDaCobra);
		setPosicaoInicialDaCobra(posicaoInicialDaCobra);
	}
	public void setPosicaoInicialDaCobra(int posicaoInicialDaCobra){
		this.posicaoInicialDaCobra = posicaoInicialDaCobra;
	}
	public void setPosicaoFinalDaCobra(int posicaoFinalDaCobra){
		this.posicaoFinalDaCobra = posicaoFinalDaCobra;}
	public int getPosicaoInicialDaCobra(){return posicaoInicialDaCobra;}
	public int getPosicaoFinalDaCobra(){return posicaoFinalDaCobra;}
}

class Escadas{
	int posicaoInicialDaEscada;
	int posicaoFinalDaEscada;
	public Escadas(int posicaoInicialDaEscada,int posicaoFinalDaEscada){
		setPosicaoFinalDaEscada(posicaoFinalDaEscada);
		setPosicaoInicialDaEscada(posicaoInicialDaEscada);
	}
	public void setPosicaoInicialDaEscada(int posicaoInicialDaEscada){
		this.posicaoInicialDaEscada = posicaoInicialDaEscada;
	}
	public void setPosicaoFinalDaEscada(int posicaoFinalDaEscada){
		this.posicaoFinalDaEscada = posicaoFinalDaEscada;}
	public int getPosicaoInicialDaEscada(){return posicaoInicialDaEscada;}
	public int getPosicaoFinalDaEscada(){return posicaoFinalDaEscada;}
}
